@use "~styles/utils.scss" as *;

.newsletter-form {
    width: min(100%, 48rem);
    height: min-content;
    position: relative;
    display: grid;
    grid: min-content / 1fr max-content;

    &__ {
        &input {
            width: 100%;
            height: auto;
            padding: getThemeValue(spacing, xs) getThemeValue(spacing, lg);
            border: getThemeValue(border, size, sm) solid getThemeValue(color, primary);
            border-right: none;
            border-radius: getThemeValue(border, radius, lg) 0 0 getThemeValue(border, radius, lg);
            outline: none;
            background-color: getThemeValue(color, main);
            color: getThemeValue(color, primary);
            font: normal normal 400 getThemeValue(typography, size, sm) / normal getThemeValue(typography, family);

            &::placeholder {
                color: getThemeValue(color, neutral);
                font-weight: 700;
            }
        }

        &button {
            width: max-content;
            height: auto;
            padding: getThemeValue(spacing, xs) getThemeValue(spacing, lg) getThemeValue(spacing, xs)
                getThemeValue(spacing, xs);
            border: none;
            border-radius: 0 getThemeValue(border, radius, lg) getThemeValue(border, radius, lg) 0;
            background-color: getThemeValue(color, primary);
            color: getThemeValue(color, secondary);
            font: normal normal 400 getThemeValue(typography, size, sm) / normal getThemeValue(typography, family);
            cursor: pointer;
        }

        &icon {
            display: block;
            color: getThemeValue(color, secondary);
            font-size: getThemeValue(icon, md);
        }

        &status {
            width: 100%;
            height: min-content;
            padding-inline: getThemeValue(spacing, sm);
            position: absolute;
            inset: calc(100% + getThemeValue(spacing, xs)) 0 0 0;
            color: getThemeValue(color, primary);
            font: normal normal 700 getThemeValue(typography, size, xs) / normal getThemeValue(typography, family);
            text-align: center;

            &-- {
                &error,
                &warning {
                    animation: getThemeValue(animation, bounceY) 1s infinite;
                }

                &error {
                    color: getThemeValue(color, danger);
                }

                &warning {
                    color: getThemeValue(color, warning);
                }

                &success {
                    color: getThemeValue(color, success);
                    animation: getThemeValue(animation, bounceX) 0.25s linear;
                }
            }
        }
    }
}
